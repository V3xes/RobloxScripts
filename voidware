--[[ VOIDWARE HEADER (keep the original header here) ]]

-- Load the main Voidware script
loadstring(game:HttpGet("https://raw.githubusercontent.com/VapeVoidware/VW-Add/"..tostring(commit).."/newnightsintheforest.lua", true))()

-- Precise Chest System for Voidware Integration
local ChestSystem = {
    Chests = {},
    AutoOpen = false,
    TeleportToChests = false,
    ChestOpenRadius = 3,
    ESPEnabled = false,
    ESPHighlights = {}
}

function ChestSystem:FindChests()
    self.Chests = {}
    
    local itemsFolder = workspace:FindFirstChild("Items")
    if not itemsFolder then return 0 end
    
    for _, obj in ipairs(itemsFolder:GetDescendants()) do
        if obj:IsA("Model") and obj.Name == "Item Chest" then
            local primaryPart = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
            if primaryPart then
                local opened = self:IsChestOpened(obj)
                
                local chestData = {
                    Model = obj,
                    Position = primaryPart.Position,
                    PrimaryPart = primaryPart,
                    Opened = opened,
                    InteractionPart = self:FindInteractionPart(obj)
                }
                
                table.insert(self.Chests, chestData)
                
                if self.ESPEnabled and not self.ESPHighlights[obj] then
                    self:CreateESP(chestData)
                end
            end
        end
    end
    
    return #self.Chests
end

function ChestSystem:FindInteractionPart(chestModel)
    local clickDetector = chestModel:FindFirstChildWhichIsA("ClickDetector")
    if clickDetector then return clickDetector.Parent end
    
    local proximityPrompt = chestModel:FindFirstChildWhichIsA("ProximityPrompt")
    if proximityPrompt then return proximityPrompt.Parent end
    
    return chestModel.PrimaryPart or chestModel:FindFirstChildWhichIsA("BasePart")
end

function ChestSystem:IsChestOpened(chestModel)
    local stateValues = {"Opened", "Open", "Used", "Activated", "Empty"}
    for _, valueName in ipairs(stateValues) do
        local value = chestModel:FindFirstChild(valueName)
        if value and value:IsA("BoolValue") then
            return value.Value
        end
    end
    return false
end

function ChestSystem:CreateESP(chest)
    if not chest or not chest.Model then return end
    
    if self.ESPHighlights[chest.Model] then
        self.ESPHighlights[chest.Model]:Destroy()
    end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "ChestESP"
    highlight.Adornee = chest.Model
    highlight.FillColor = chest.Opened and Color3.fromRGB(100, 100, 100) or Color3.fromRGB(0, 255, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = game:GetService("CoreGui")
    
    self.ESPHighlights[chest.Model] = highlight
end

function ChestSystem:UpdateESP()
    if not self.ESPEnabled then return end
    
    for chestModel, highlight in pairs(self.ESPHighlights) do
        if chestModel and chestModel.Parent and highlight then
            local chestData
            for _, c in ipairs(self.Chests) do
                if c.Model == chestModel then
                    chestData = c
                    break
                end
            end
            
            if chestData then
                highlight.FillColor = chestData.Opened and Color3.fromRGB(100, 100, 100) or Color3.fromRGB(0, 255, 0)
            else
                highlight:Destroy()
                self.ESPHighlights[chestModel] = nil
            end
        else
            highlight:Destroy()
            self.ESPHighlights[chestModel] = nil
        end
    end
end

function ChestSystem:ClearESP()
    for _, highlight in pairs(self.ESPHighlights) do
        if highlight then highlight:Destroy() end
    end
    self.ESPHighlights = {}
end

function ChestSystem:OpenChest(chest)
    if chest.Opened then return false end
    
    local character = game.Players.LocalPlayer.Character
    if not character then return false end
    
    local clickDetector = chest.Model:FindFirstChildWhichIsA("ClickDetector")
    if clickDetector then
        fireclickdetector(clickDetector)
        chest.Opened = true
        return true
    end
    
    local proximityPrompt = chest.Model:FindFirstChildWhichIsA("ProximityPrompt")
    if proximityPrompt then
        fireproximityprompt(proximityPrompt)
        chest.Opened = true
        return true
    end
    
    return false
end

function ChestSystem:OpenNearbyChests()
    local character = game.Players.LocalPlayer.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    for _, chest in ipairs(self.Chests) do
        if not chest.Opened then
            local distance = (humanoidRootPart.Position - chest.Position).Magnitude
            if distance <= self.ChestOpenRadius then
                self:OpenChest(chest)
                task.wait(0.3)
            end
        end
    end
end

function ChestSystem:TeleportToChest(chest)
    if not chest then return false end
    local character = game.Players.LocalPlayer.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return false end
    
    humanoidRootPart.CFrame = CFrame.new(chest.Position + Vector3.new(0, 2, 0))
    return true
end

-- Chest handling loop
task.spawn(function()
    while task.wait(1) do
        if ChestSystem.AutoOpen or ChestSystem.TeleportToChests or ChestSystem.ESPEnabled then
            ChestSystem:FindChests()
            
            if ChestSystem.TeleportToChests and #ChestSystem.Chests > 0 then
                for _, chest in ipairs(ChestSystem.Chests) do
                    if not chest.Opened then
                        if ChestSystem:TeleportToChest(chest) then
                            task.wait(0.5)
                            if ChestSystem.AutoOpen then
                                ChestSystem:OpenNearbyChests()
                            end
                            break
                        end
                    end
                end
            elseif ChestSystem.AutoOpen then
                ChestSystem:OpenNearbyChests()
            end
            
            if ChestSystem.ESPEnabled then
                ChestSystem:UpdateESP()
            end
        end
    end
end)

-- Wait for Voidware UI to load and integrate features
task.spawn(function()
    local maxWaitTime = 30
    local waitTime = 0
    
    while waitTime < maxWaitTime do
        local voidwareUI = game:GetService("CoreGui"):FindFirstChild("Voidware")
        if voidwareUI then
            -- Find Main tab
            local mainTab = voidwareUI:FindFirstChild("MainFrame") or voidwareUI:FindFirstChildWhichIsA("Frame")
            if mainTab then
                -- Add Auto Open to Main tab
                local autoOpenBtn = Instance.new("TextButton")
                autoOpenBtn.Name = "AutoChestOpen"
                autoOpenBtn.Size = UDim2.new(0.9, 0, 0, 25)
                autoOpenBtn.Position = UDim2.new(0.05, 0, 0, mainTab.AbsoluteSize.Y - 100)
                autoOpenBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                autoOpenBtn.BorderSizePixel = 0
                autoOpenBtn.Text = "Auto Open Chests: OFF"
                autoOpenBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
                autoOpenBtn.Font = Enum.Font.Gotham
                autoOpenBtn.TextSize = 12
                autoOpenBtn.Parent = mainTab
                
                autoOpenBtn.MouseButton1Click:Connect(function()
                    ChestSystem.AutoOpen = not ChestSystem.AutoOpen
                    autoOpenBtn.Text = "Auto Open Chests: " .. (ChestSystem.AutoOpen and "ON" or "OFF")
                    autoOpenBtn.TextColor3 = ChestSystem.AutoOpen and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
                end)
                
                -- Add Teleport to Chests to Main tab
                local teleportBtn = Instance.new("TextButton")
                teleportBtn.Name = "TeleportToChests"
                teleportBtn.Size = UDim2.new(0.9, 0, 0, 25)
                teleportBtn.Position = UDim2.new(0.05, 0, 0, mainTab.AbsoluteSize.Y - 70)
                teleportBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                teleportBtn.BorderSizePixel = 0
                teleportBtn.Text = "Teleport to Chests: OFF"
                teleportBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
                teleportBtn.Font = Enum.Font.Gotham
                teleportBtn.TextSize = 12
                teleportBtn.Parent = mainTab
                
                teleportBtn.MouseButton1Click:Connect(function()
                    ChestSystem.TeleportToChests = not ChestSystem.TeleportToChests
                    teleportBtn.Text = "Teleport to Chests: " .. (ChestSystem.TeleportToChests and "ON" or "OFF")
                    teleportBtn.TextColor3 = ChestSystem.TeleportToChests and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
                end)
                
                -- Find ESP tab (usually named "Visuals" or "ESP")
                local espTab = voidwareUI:FindFirstChild("Visuals") or voidwareUI:FindFirstChild("ESPTab") or voidwareUI:FindFirstChild("ESP")
                if not espTab then
                    -- Look for tabs with ESP content
                    for _, child in ipairs(voidwareUI:GetDescendants()) do
                        if child:IsA("TextLabel") and child.Text:lower():find("esp") then
                            espTab = child.Parent
                            break
                        end
                    end
                end
                
                if espTab then
                    -- Add Chest ESP to ESP tab
                    local chestEspBtn = Instance.new("TextButton")
                    chestEspBtn.Name = "ChestESP"
                    chestEspBtn.Size = UDim2.new(0.9, 0, 0, 25)
                    chestEspBtn.Position = UDim2.new(0.05, 0, 0, espTab.AbsoluteSize.Y - 50)
                    chestEspBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                    chestEspBtn.BorderSizePixel = 0
                    chestEspBtn.Text = "Chest ESP: OFF"
                    chestEspBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
                    chestEspBtn.Font = Enum.Font.Gotham
                    chestEspBtn.TextSize = 12
                    chestEspBtn.Parent = espTab
                    
                    chestEspBtn.MouseButton1Click:Connect(function()
                        ChestSystem.ESPEnabled = not ChestSystem.ESPEnabled
                        chestEspBtn.Text = "Chest ESP: " .. (ChestSystem.ESPEnabled and "ON" or "OFF")
                        chestEspBtn.TextColor3 = ChestSystem.ESPEnabled and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
                        
                        if ChestSystem.ESPEnabled then
                            for _, chest in ipairs(ChestSystem.Chests) do
                                ChestSystem:CreateESP(chest)
                            end
                        else
                            ChestSystem:ClearESP()
                        end
                    end)
                end
                
                warn("Chest features integrated into Voidware UI!")
                break
            end
        end
        waitTime = waitTime + 1
        task.wait(1)
    end
end)

warn("Voidware loaded with integrated Chest System!")
