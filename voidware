--[[ VOIDWARE HEADER (keep the original header here) ]]

-- Load the main Voidware script
loadstring(game:HttpGet("https://raw.githubusercontent.com/VapeVoidware/VW-Add/"..tostring(commit).."/newnightsintheforest.lua", true))()

-- Precise Chest System for Voidware Integration
local ChestSystem = {
    Chests = {},
    AutoOpen = false,
    TeleportToChests = false,
    ChestOpenRadius = 3,
    ESPEnabled = false,
    ESPHighlights = {}
}

function ChestSystem:FindChests()
    self.Chests = {}
    
    local itemsFolder = workspace:FindFirstChild("Items")
    if not itemsFolder then return 0 end
    
    for _, obj in ipairs(itemsFolder:GetDescendants()) do
        if obj:IsA("Model") and obj.Name == "Item Chest" then
            local primaryPart = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
            if primaryPart then
                local opened = self:IsChestOpened(obj)
                
                local chestData = {
                    Model = obj,
                    Position = primaryPart.Position,
                    PrimaryPart = primaryPart,
                    Opened = opened,
                    InteractionPart = self:FindInteractionPart(obj)
                }
                
                table.insert(self.Chests, chestData)
                
                if self.ESPEnabled and not self.ESPHighlights[obj] then
                    self:CreateESP(chestData)
                end
            end
        end
    end
    
    return #self.Chests
end

function ChestSystem:FindInteractionPart(chestModel)
    local clickDetector = chestModel:FindFirstChildWhichIsA("ClickDetector")
    if clickDetector then return clickDetector.Parent end
    
    local proximityPrompt = chestModel:FindFirstChildWhichIsA("ProximityPrompt")
    if proximityPrompt then return proximityPrompt.Parent end
    
    return chestModel.PrimaryPart or chestModel:FindFirstChildWhichIsA("BasePart")
end

function ChestSystem:IsChestOpened(chestModel)
    local stateValues = {"Opened", "Open", "Used", "Activated", "Empty"}
    for _, valueName in ipairs(stateValues) do
        local value = chestModel:FindFirstChild(valueName)
        if value and value:IsA("BoolValue") then
            return value.Value
        end
    end
    return false
end

function ChestSystem:CreateESP(chest)
    if not chest or not chest.Model then return end
    
    if self.ESPHighlights[chest.Model] then
        self.ESPHighlights[chest.Model]:Destroy()
    end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "ChestESP"
    highlight.Adornee = chest.Model
    highlight.FillColor = chest.Opened and Color3.fromRGB(100, 100, 100) or Color3.fromRGB(0, 255, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = game:GetService("CoreGui")
    
    self.ESPHighlights[chest.Model] = highlight
end

function ChestSystem:UpdateESP()
    if not self.ESPEnabled then return end
    
    for chestModel, highlight in pairs(self.ESPHighlights) do
        if chestModel and chestModel.Parent and highlight then
            local chestData
            for _, c in ipairs(self.Chests) do
                if c.Model == chestModel then
                    chestData = c
                    break
                end
            end
            
            if chestData then
                highlight.FillColor = chestData.Opened and Color3.fromRGB(100, 100, 100) or Color3.fromRGB(0, 255, 0)
            else
                highlight:Destroy()
                self.ESPHighlights[chestModel] = nil
            end
        else
            highlight:Destroy()
            self.ESPHighlights[chestModel] = nil
        end
    end
end

function ChestSystem:ClearESP()
    for _, highlight in pairs(self.ESPHighlights) do
        if highlight then highlight:Destroy() end
    end
    self.ESPHighlights = {}
end

function ChestSystem:OpenChest(chest)
    if chest.Opened then return false end
    
    local character = game.Players.LocalPlayer.Character
    if not character then return false end
    
    local clickDetector = chest.Model:FindFirstChildWhichIsA("ClickDetector")
    if clickDetector then
        fireclickdetector(clickDetector)
        chest.Opened = true
        return true
    end
    
    local proximityPrompt = chest.Model:FindFirstChildWhichIsA("ProximityPrompt")
    if proximityPrompt then
        fireproximityprompt(proximityPrompt)
        chest.Opened = true
        return true
    end
    
    return false
end

function ChestSystem:OpenNearbyChests()
    local character = game.Players.LocalPlayer.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    for _, chest in ipairs(self.Chests) do
        if not chest.Opened then
            local distance = (humanoidRootPart.Position - chest.Position).Magnitude
            if distance <= self.ChestOpenRadius then
                self:OpenChest(chest)
                task.wait(0.3)
            end
        end
    end
end

function ChestSystem:TeleportToChest(chest)
    if not chest then return false end
    local character = game.Players.LocalPlayer.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return false end
    
    humanoidRootPart.CFrame = CFrame.new(chest.Position + Vector3.new(0, 2, 0))
    return true
end

-- Chest handling loop
task.spawn(function()
    while task.wait(1) do
        if ChestSystem.AutoOpen or ChestSystem.TeleportToChests or ChestSystem.ESPEnabled then
            ChestSystem:FindChests()
            
            if ChestSystem.TeleportToChests and #ChestSystem.Chests > 0 then
                for _, chest in ipairs(ChestSystem.Chests) do
                    if not chest.Opened then
                        if ChestSystem:TeleportToChest(chest) then
                            task.wait(0.5)
                            if ChestSystem.AutoOpen then
                                ChestSystem:OpenNearbyChests()
                            end
                            break
                        end
                    end
                end
            elseif ChestSystem.AutoOpen then
                ChestSystem:OpenNearbyChests()
            end
            
            if ChestSystem.ESPEnabled then
                ChestSystem:UpdateESP()
            end
        end
    end
end)

-- Integrate into Voidware UI
task.spawn(function()
    local maxWaitTime = 30
    local waitTime = 0
    
    while waitTime < maxWaitTime do
        local voidwareUI = game:GetService("CoreGui"):FindFirstChild("Voidware")
        if voidwareUI then
            -- Find Main Tab
            local mainTab = voidwareUI:FindFirstChild("Main") or voidwareUI:FindFirstChild("HomeTab") or voidwareUI:FindFirstChildWhichIsA("Frame")
            if mainTab then
                -- Add Auto Open to Main Tab
                local autoOpenLabel = Instance.new("TextLabel")
                autoOpenLabel.Name = "AutoChestLabel"
                autoOpenLabel.Size = UDim2.new(0, 120, 0, 20)
                autoOpenLabel.Position = UDim2.new(0, 10, 0, 200)
                autoOpenLabel.BackgroundTransparency = 1
                autoOpenLabel.Text = "Auto Open Chests:"
                autoOpenLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                autoOpenLabel.Font = Enum.Font.Gotham
                autoOpenLabel.TextSize = 12
                autoOpenLabel.TextXAlignment = Enum.TextXAlignment.Left
                autoOpenLabel.Parent = mainTab
                
                local autoOpenToggle = Instance.new("TextButton")
                autoOpenToggle.Name = "AutoChestToggle"
                autoOpenToggle.Size = UDim2.new(0, 40, 0, 20)
                autoOpenToggle.Position = UDim2.new(0, 140, 0, 200)
                autoOpenToggle.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
                autoOpenToggle.BorderSizePixel = 0
                autoOpenToggle.Text = "OFF"
                autoOpenToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
                autoOpenToggle.Font = Enum.Font.GothamBold
                autoOpenToggle.TextSize = 12
                autoOpenToggle.Parent = mainTab
                
                -- Add Teleport to Main Tab
                local teleportLabel = Instance.new("TextLabel")
                teleportLabel.Name = "TeleportChestLabel"
                teleportLabel.Size = UDim2.new(0, 120, 0, 20)
                teleportLabel.Position = UDim2.new(0, 10, 0, 225)
                teleportLabel.BackgroundTransparency = 1
                teleportLabel.Text = "Teleport to Chests:"
                teleportLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                teleportLabel.Font = Enum.Font.Gotham
                teleportLabel.TextSize = 12
                teleportLabel.TextXAlignment = Enum.TextXAlignment.Left
                teleportLabel.Parent = mainTab
                
                local teleportToggle = Instance.new("TextButton")
                teleportToggle.Name = "TeleportChestToggle"
                teleportToggle.Size = UDim2.new(0, 40, 0, 20)
                teleportToggle.Position = UDim2.new(0, 140, 0, 225)
                teleportToggle.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
                teleportToggle.BorderSizePixel = 0
                teleportToggle.Text = "OFF"
                teleportToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
                teleportToggle.Font = Enum.Font.GothamBold
                teleportToggle.TextSize = 12
                teleportToggle.Parent = mainTab
                
                -- Find Visuals/ESP Tab
                local visualsTab = voidwareUI:FindFirstChild("Visuals") or voidwareUI:FindFirstChild("ESP") or voidwareUI:FindFirstChild("Render")
                if visualsTab then
                    -- Add Chest ESP to Visuals Tab
                    local espLabel = Instance.new("TextLabel")
                    espLabel.Name = "ChestESPLabel"
                    espLabel.Size = UDim2.new(0, 120, 0, 20)
                    espLabel.Position = UDim2.new(0, 10, 0, 150)
                    espLabel.BackgroundTransparency = 1
                    espLabel.Text = "Chest ESP:"
                    espLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    espLabel.Font = Enum.Font.Gotham
                    espLabel.TextSize = 12
                    espLabel.TextXAlignment = Enum.TextXAlignment.Left
                    espLabel.Parent = visualsTab
                    
                    local espToggle = Instance.new("TextButton")
                    espToggle.Name = "ChestESPToggle"
                    espToggle.Size = UDim2.new(0, 40, 0, 20)
                    espToggle.Position = UDim2.new(0, 140, 0, 150)
                    espToggle.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
                    espToggle.BorderSizePixel = 0
                    espToggle.Text = "OFF"
                    espToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
                    espToggle.Font = Enum.Font.GothamBold
                    espToggle.TextSize = 12
                    espToggle.Parent = visualsTab
                    
                    -- ESP Toggle functionality
                    espToggle.MouseButton1Click:Connect(function()
                        ChestSystem.ESPEnabled = not ChestSystem.ESPEnabled
                        espToggle.Text = ChestSystem.ESPEnabled and "ON" or "OFF"
                        espToggle.BackgroundColor3 = ChestSystem.ESPEnabled and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
                        
                        if ChestSystem.ESPEnabled then
                            for _, chest in ipairs(ChestSystem.Chests) do
                                ChestSystem:CreateESP(chest)
                            end
                        else
                            ChestSystem:ClearESP()
                        end
                    end)
                end
                
                -- Toggle functionality
                autoOpenToggle.MouseButton1Click:Connect(function()
                    ChestSystem.AutoOpen = not ChestSystem.AutoOpen
                    autoOpenToggle.Text = ChestSystem.AutoOpen and "ON" or "OFF"
                    autoOpenToggle.BackgroundColor3 = ChestSystem.AutoOpen and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
                end)
                
                teleportToggle.MouseButton1Click:Connect(function()
                    ChestSystem.TeleportToChests = not ChestSystem.TeleportToChests
                    teleportToggle.Text = ChestSystem.TeleportToChests and "ON" or "OFF"
                    teleportToggle.BackgroundColor3 = ChestSystem.TeleportToChests and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
                end)
                
                warn("Chest features integrated into Voidware UI!")
                break
            end
        end
        waitTime = waitTime + 1
        task.wait(1)
    end
end)

warn("Voidware loaded with integrated Chest System!")
